// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  email           String   @unique
  password        String
  role            String   @default("user")  // "user" or "admin"
  activeWalletId  String?
  wallets         Wallet[]
  createdAt       DateTime @default(now())
}


model Wallet {
  id        String   @id @default(uuid())
  name      String
  type      String
  balance   Float    @default(0)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  fromTransactions Transaction[] @relation("FromWallet")
  toTransactions   Transaction[] @relation("ToWallet")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id         String   @id @default(uuid())
  amount     Float
  type       String   // "debit" or "credit"
  fromWalletId String?
  toWalletId   String?
  fromWallet   Wallet? @relation("FromWallet", fields: [fromWalletId], references: [id])
  toWallet     Wallet? @relation("ToWallet", fields: [toWalletId], references: [id])
  createdAt  DateTime @default(now())
}

model Service {
  id        String   @id @default(uuid())
  name      String   @unique
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Log {
  id         String   @id @default(uuid())
  action     String
  actorId    String
  actorRole  String    // "user" or "admin"
  details    String
  createdAt  DateTime  @default(now())
}



